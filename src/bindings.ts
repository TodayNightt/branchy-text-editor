/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function getFileSystemInfo(dir: string | null) {
    return invoke()<FileSystemInfo>("get_file_system_info", { dir })
}

export function openFile(path: string) {
    return invoke()<OpenFile>("open_file", { path })
}

export function getFileInfo(id: number) {
    return invoke()<OpenedFile | null>("get_file_info", { id })
}

export function getSourceCodeIfAny(id: number) {
    return invoke()<string | null>("get_source_code_if_any", { id })
}

export function closeFile(id: number) {
    return invoke()<null>("close_file", { id })
}

export type OpenedFile = { name: string; source_code: number[]; language: Lang | null; path: string }
export type DirectoryItem = { is_file: boolean; name: string; path: string; childrens: DirectoryItem[] | null }
export type OpenFile = { id: number; name: string; language: Lang | null; same_name_exist: boolean; path: string }
export type Lang = "Javascript" | "Typescript" | "Rust" | "Python" | "Java" | "Ruby" | "Html" | "Css"
export type FileSystemInfo = { current_directory: string; directory_items: DirectoryItem[] }
